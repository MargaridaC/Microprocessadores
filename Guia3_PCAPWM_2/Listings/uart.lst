C51 COMPILER V9.60.0.0   UART                                                              05/17/2020 00:39:11 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE uart.c OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\uart
                    -.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          #pragma large
   2          #include <REG51F380.H>
   3          #include "uart.h"
   4          
   5          #define BUFFERSIZE 16
   6          #define EMPTY 95
   7          
   8          extern bit tramaCompleta;
   9          
  10          char UARTBuffer[BUFFERSIZE];
  11          char UARTBufferindex = 0;
  12          
  13          char StringLen(const char* string) {
  14   1        char len = 0;
  15   1        while (string[len] != '\0') {
  16   2          len++;
  17   2        }
  18   1        return len;
  19   1      }
  20          
  21          char ler_caracter() {
  22   1          char RET = -1;
  23   1          if (RI0 == 1) {
  24   2            RET = SBUF0;
  25   2            RI0 = 0;
  26   2          }
  27   1          return RET;
  28   1      }
  29          
  30          void print(char *character, bit var) {
  31   1          if(var == 0) {
  32   2            char i;
  33   2            for(i = 0; i < StringLen(character); i++) {
  34   3              SBUF0 = (character[i] == '\n') ? 13 : character[i];
  35   3              while(TI0 == 1)
  36   3                TI0 = 0;
  37   3            }
  38   2          } else if(var == 1) {
  39   2            char digit[3] = {0, 0, 0};
  40   2            char i = 2;
  41   2            char number = (char)*character;
  42   2            while (number > 0) {
  43   3             digit[i] = number % 10;
  44   3             i--;
  45   3             number /= 10;
  46   3            }
  47   2            for(i = 0; i < 3; i++) {
  48   3              SBUF0 = digit[i]+48;
  49   3              while(TI0 == 1)
  50   3                TI0 = 0;
  51   3            }
  52   2          }
  53   1      }
  54          
C51 COMPILER V9.60.0.0   UART                                                              05/17/2020 00:39:11 PAGE 2   

  55          void printBuffer() {
  56   1        print(UARTBuffer, 0);
  57   1        print("\n", 0);
  58   1      }
  59          
  60          void Add2Buffer(char letra) {
  61   1        if(letra == '\b') {
  62   2          if (UARTBufferindex > 0) {
  63   3            UARTBufferindex--;
  64   3            UARTBuffer[UARTBufferindex] = EMPTY;
  65   3          }
  66   2        }
  67   1        else {
  68   2          UARTBuffer[UARTBufferindex] = letra;
  69   2          UARTBufferindex++;
  70   2          UARTBufferindex &= BUFFERSIZE-1;
  71   2        }
  72   1      }
  73          
  74          char CheckSerial() { // -1 nada  // 0 normal // 1 enter
  75   1          char readed = 0;
  76   1          readed = ler_caracter();
  77   1          if(readed != -1) {
  78   2            readed -= (readed <= 172 && readed >= 97) ? 32 : 0;
  79   2            Add2Buffer(readed);
  80   2            if(readed == 13)
  81   2              tramaCompleta = 1;
  82   2            return (readed == 13) ? 1 : 0;
  83   2          }
  84   1          return -1;
  85   1      }
  86          
  87          void Reset() {
  88   1        char i = 0;
  89   1        for(i = 0; i < BUFFERSIZE; i++)
  90   1          UARTBuffer[i] = EMPTY;
  91   1        UARTBufferindex = 0;
  92   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    797    ----
   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =     33    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
