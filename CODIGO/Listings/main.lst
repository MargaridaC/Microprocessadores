C51 COMPILER V9.60.0.0   MAIN                                                              03/30/2020 15:06:37 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REG51F380.H>
   2          
   3          unsigned char code Numeros[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x83,0xc6,0xa1, 0x86,
             -0x8e};
   4          
   5          #define RECOVERY 0
   6          #define LOCKED 1
   7          #define DECRYPT 2
   8          #define FAIL 3
   9          #define BLOCKED 4
  10          #define OPEN 5
  11          #define ENCRYPT 6
  12          
  13          #define TENTATIVAS_COFRE 3
  14          #define SIZE_CHAVES 4
  15          
  16          sbit P0_7 = (P0^7);
  17          sbit P0_6 = (P0^6);
  18          sbit P2_7 = (P2^7);
  19          sbit P2_6 = (P2^6);
  20          
  21          char PB1C = 0;
  22          bit PB1b = 0;
  23          char PB2C = 0;
  24          bit PB2b = 0;
  25          
  26          char idata Astate _at_ 0x80;
  27          char idata Nstate _at_ 0x81;
  28          char idata Vstate _at_ 0x82;
  29          char idata Trys  _at_ 0x83;
  30          char idata USR_KEY[SIZE_CHAVES] _at_ 0x90;
  31          char idata SEC_KEY[SIZE_CHAVES] _at_ 0x98;
  32          
  33          bit ClicaBotoes = 0;    //KLL
  34          bit KLICKSet = 0;       //KSS
  35          bit KLICKLoad = 0;
  36          bit PrimeiraVez = 1;    //KLO
  37          bit VALID = 0;
  38          char index = 0;
  39          char Digits = 0;
  40          char i = 0;
  41          int count1;
  42          int count;
  43          char tt;
  44          
  45          void Update_Disp(char t)
  46          {
  47   1        P2 = Numeros[t];
  48   1      }
  49          
  50          
  51          void Init_Device( void )
  52          {
  53   1        PCA0MD = 0;
C51 COMPILER V9.60.0.0   MAIN                                                              03/30/2020 15:06:37 PAGE 2   

  54   1        FLSCL = 0x90;
  55   1        CLKSEL = 0x03;
  56   1      
  57   1        XBR0 = 0x01;
  58   1        XBR1 = 0x40;
  59   1      
  60   1        TMOD  =   TMOD  | 0x02;
  61   1        CKCON =   CKCON | 0x02;
  62   1        TH0   =   -250;
  63   1        TL0   =   -250;
  64   1        IE    = 0x82;
  65   1        TR0   =   0;
  66   1      }
  67          
  68          
  69          void Timer0 ( void ) interrupt 1 {
  70   1      
  71   1        if(Astate == OPEN) {
  72   2          count1 --;
  73   2          if (count1 == 0){
  74   3            P2_7 = !P2_7;
  75   3            count --;
  76   3            count1 = 2000;
  77   3          }
  78   2          if (count == 0){
  79   3            Nstate = ENCRYPT;
  80   3            ClicaBotoes = 0;
  81   3            TR0 = 0;
  82   3            P2_7 = 1;
  83   3          }
  84   2        } else if (Astate == FAIL) {
  85   2          count1 --;
  86   2          if (count1 == 0){
  87   3            P2_7 = !P2_7;
  88   3            count --;
  89   3            count1 = 2000;
  90   3          }
  91   2          if (count == 0){
  92   3            ClicaBotoes = 0;
  93   3            P2_7 = 1;
  94   3            TR0 = 0;
  95   3          }
  96   2        }
  97   1      }
  98          
  99          void F_Recover ( void ) {
 100   1        Nstate = LOCKED;
 101   1        ClicaBotoes = 0;
 102   1        Trys = 0;
 103   1      }
 104          
 105          
 106          void F_Locked( void ) {
 107   1        if (PrimeiraVez == 1) {
 108   2          Digits = 0;
 109   2          PrimeiraVez = 0;
 110   2          index = 0;
 111   2        } else if (KLICKSet == 1) {
 112   2          index ++;
 113   2        } else {
 114   2          Digits ++;
 115   2          USR_KEY[Digits - 1] = index;
C51 COMPILER V9.60.0.0   MAIN                                                              03/30/2020 15:06:37 PAGE 3   

 116   2          index = 0;
 117   2        }
 118   1        Update_Disp(index);
 119   1        P3 = Numeros[SEC_KEY[Digits]];
 120   1        Nstate = LOCKED;
 121   1        ClicaBotoes = 1;
 122   1        if(Digits == 4) {
 123   2          ClicaBotoes = 0;
 124   2          Nstate = DECRYPT;
 125   2        }
 126   1      }
 127          
 128          
 129          void F_Decrypt( void ) {
 130   1        char j;
 131   1        char t = 0;
 132   1        for(j = 0 ;j < SIZE_CHAVES; j++)
 133   1          if(USR_KEY[j] != SEC_KEY[j])
 134   1            t ++;
 135   1      
 136   1        if (t == 0){
 137   2          VALID = 1;
 138   2          Nstate = OPEN;
 139   2        } else {
 140   2          VALID = 0;
 141   2          Nstate = FAIL;
 142   2        }
 143   1      }
 144          
 145          
 146          void F_Fail() {
 147   1        Trys ++;
 148   1        tt = 0;
 149   1        if(Trys <= TENTATIVAS_COFRE-1) {//Locked + Delay
 150   2          for (tt = 0; tt<Trys ; tt++) {
 151   3            P2 = Numeros[15];
 152   3            TR0 = 1;
 153   3            count = 10;
 154   3            count1 = 2000;
 155   3            while (TR0 == 1);
 156   3            Nstate = LOCKED;
 157   3          }
 158   2        } else {
 159   2          Nstate = BLOCKED;
 160   2        }
 161   1        ClicaBotoes = 0;
 162   1      }
 163          
 164          
 165          void F_Blocked ( void ) {
 166   1        P2 = Numeros[11];
 167   1        P2_7 = 0;
 168   1        while(1) {
 169   2          if (P0_6 == 0 && P0_7 == 0)
 170   2            Vstate = RECOVERY;
 171   2        }
 172   1      }
 173          
 174          
 175          void F_Open( void ){
 176   1        Nstate = LOCKED;
 177   1        TR0 = 1;
C51 COMPILER V9.60.0.0   MAIN                                                              03/30/2020 15:06:37 PAGE 4   

 178   1        ClicaBotoes = 1;
 179   1        Trys = 0;
 180   1        P2 = 163;
 181   1        if (PrimeiraVez == 1){
 182   2          PrimeiraVez = 0;
 183   2          P2_7 = 0;
 184   2          count = 10;
 185   2          count1 = 2000;
 186   2        }
 187   1      }
 188          
 189          
 190          void F_Encrypt( void ) {
 191   1        if (PrimeiraVez == 1) {
 192   2          Digits = 0;
 193   2          PrimeiraVez = 0;
 194   2          index = 0;
 195   2        } else if (KLICKSet == 1)
 196   1          index ++;
 197   1        else {
 198   2          Digits ++;
 199   2          USR_KEY[Digits-1] = index;
 200   2          index = 0;
 201   2        }
 202   1        P3 = Numeros[USR_KEY[Digits]];
 203   1        Update_Disp(index);
 204   1        Nstate = ENCRYPT;
 205   1        ClicaBotoes = 1;
 206   1        if (Digits == 4)
 207   1        {
 208   2          for (i = 0; i < SIZE_CHAVES; i++)
 209   2            SEC_KEY[i] = USR_KEY[i];
 210   2          Nstate = LOCKED;
 211   2        }
 212   1      }
 213          
 214          void le_botoes ( void ) {
 215   1        /*
 216   1        while(!PB1b && !PB2b) {
 217   1          if(P0_7 == 1 && PB1C < 127)
 218   1            PB1C++;
 219   1          if(PB1C == 127)
 220   1            PB1b = 1;
 221   1            KLICKSet = 1;
 222   1          if(P0_6 == 1 && PB2C < 127)
 223   1            PB2C++;
 224   1          if(PB2C == 127) {
 225   1            PB2b = 1;
 226   1            KLICKLoad = 1;
 227   1          }
 228   1        }
 229   1      
 230   1      
 231   1        while(PB1b || PB2b) {
 232   1          if(P0_7 == 0 && PB1C > 0)
 233   1            PB1C--;
 234   1          if(PB1C == 0)
 235   1            PB1b = 0;
 236   1      
 237   1          if(P0_6 == 0 && PB2C > 0)
 238   1            PB2C--;
 239   1          if(PB2C == 0)
C51 COMPILER V9.60.0.0   MAIN                                                              03/30/2020 15:06:37 PAGE 5   

 240   1            PB2b = 0;
 241   1        }
 242   1          */
 243   1        if (P0_7 == 0) {
 244   2          KLICKLoad = 1;
 245   2          while(P0_7 == 0)
 246   2            ;
 247   2        }
 248   1        if (P0_6 == 0) {
 249   2          KLICKSet = 1;
 250   2          while(P0_6 == 0)
 251   2            ;
 252   2        }
 253   1      }
 254          
 255          
 256          
 257          void main( void ) {
 258   1        Init_Device();
 259   1        Trys = 0;
 260   1        Vstate = RECOVERY;
 261   1        Astate = Vstate;
 262   1        Nstate = Vstate;
 263   1        SEC_KEY[0] = 1;
 264   1        SEC_KEY[1] = 2;
 265   1        SEC_KEY[2] = 3;
 266   1        SEC_KEY[3] = 4;
 267   1      
 268   1        while(1) {
 269   2          KLICKLoad = 0;
 270   2          KLICKSet = 0;
 271   2          while(!KLICKLoad && !KLICKSet && ClicaBotoes)
 272   2            le_botoes();
 273   2      
 274   2          if(Astate == OPEN && (KLICKSet == 1 || KLICKLoad == 1))
 275   2            TR0 = 0;
 276   2      
 277   2          if(Astate != Nstate) {
 278   3            Astate = Nstate;
 279   3            PrimeiraVez = 1;
 280   3          }
 281   2      
 282   2          Vstate = Astate;
 283   2          P1 = Numeros [Astate];
 284   2      
 285   2          switch (Astate) {
 286   3            case RECOVERY:  F_Recover();
 287   3                            break;
 288   3            case LOCKED:    F_Locked();
 289   3                            break;
 290   3            case DECRYPT:   F_Decrypt();
 291   3                            break;
 292   3            case FAIL:      F_Fail();
 293   3                            break;
 294   3            case BLOCKED:   F_Blocked();
 295   3                            break;
 296   3            case OPEN:      F_Open();
 297   3                            break;
 298   3            case ENCRYPT:   F_Encrypt();
 299   3                            break;
 300   3          }
 301   2        }
C51 COMPILER V9.60.0.0   MAIN                                                              03/30/2020 15:06:37 PAGE 6   

 302   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    890    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      7    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
